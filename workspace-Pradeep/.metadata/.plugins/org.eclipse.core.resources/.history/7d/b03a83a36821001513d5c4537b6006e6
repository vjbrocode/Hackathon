package tneb;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class BillCalculator {
   
	public String generateBill(String custId) throws SQLException{
		System.out.println("Inside generateBill() ###");
		
		BillGenerator billObj = new BillGenerator();
		List<ReportDto> list = new ArrayList<ReportDto>();
		list.clear();
		if(custId.length() !=0){
		  String[] arrayId = custId.split(",");
		  list = billObj.processSearchQuery(arrayId);
		}else{
		  list = billObj.processQuery();
		}
		float rate1 = 0 ;
		float rate2 = 0;
		float rate3 = 0;
		float rate4 = 0;
		
		//get unit per charge
		List<HashMap<String, String>> rateObj =  getPerUnitCharge();	
		
		for (HashMap<String, String> hashMap : rateObj) {
			int endTire = Integer.parseInt(hashMap.get("end"));
			System.out.println("Map end : "+endTire);
			if(endTire < 301){
				rate1 = Float.valueOf(hashMap.get("rate"));
			}else if(endTire > 300 && endTire < 601){
				rate2 = Float.valueOf(hashMap.get("rate"));
			}else if(endTire > 600 && endTire < 1001){
				rate3 = Float.valueOf(hashMap.get("rate"));
			}else if(endTire > 1000 || endTire == 0){
				rate4 = Float.valueOf(hashMap.get("rate"));
			}
		}
		BillGenerator billObj1 = new BillGenerator();
		for (ReportDto report : list) {
			calculateBill(report,rate1,rate2,rate3,rate4);
			billObj1.getCustomerProfile(report);
		}				
		//create one method to return result 
		String finalHtml ="";
		for (ReportDto report : list) {			
			String html = generateHtml(report);
			finalHtml = finalHtml + html;
		}	
		return finalHtml;
	}
	
	public void calculateBill(ReportDto reportDto , float rate1 , float rate2 ,float rate3,float rate4){
		System.out.println("Inside calcuateBil() #### ");
		double bill1 = 0;
		double bill2 = 0;
		double bill3 = 0;
		double bill4 = 0;		
		
		int start = Integer.parseInt(reportDto.getStartId());
		int end = Integer.parseInt(reportDto.getEndId());		
		int diff = end - start; 	
		
		System.out.println(diff);
		
		for(int i=1 ; i < diff ; i++){
			if(i < 301){
				bill1 = bill1 + rate1;
			}
			if(i > 301 && i < 601){
				bill2 = bill2 + rate2;
			}
			if(i > 601 && i < 1001){
				bill3 = bill3 + rate3;
			}
			if(i > 1000){
				bill4 = bill4 + rate4;
			}			
		}
		System.out.println(bill1+" bill2 : "+bill2+" bil3 : "+bill3+" bill4 : "+bill4);
		double finalBill = bill1 + bill2 + bill3+ bill4;		
		double taxvalue = (finalBill * 0.1);		
		System.out.println(finalBill+taxvalue);		
		reportDto.setBill(finalBill+taxvalue);		
		System.out.println("End of calcuateBil() #### ");
	}
	
	public ArrayList<HashMap<String, String>> getPerUnitCharge() throws SQLException{
		System.out.println("Inside getPerUnitCharge() ###");
		
		Connection con = null;
		PreparedStatement pst = null;
		ResultSet rs = null;
		
		ArrayList<HashMap<String, String>> rate = null;
		try{
			Class.forName("com.mysql.jdbc.Driver");
			final String url_db = "jdbc:mysql://localhost:3306/world";
		    final String user = "scoot";
			final String pass = "Tiger"; 
			
			con = DriverManager.getConnection(url_db,user,pass);
			String query = "select * from rate_per_unit";
			pst = con.prepareStatement(query);
			rs = pst.executeQuery();
		    rate = new ArrayList<>();
			HashMap<String, String> unitRate = null;
			while(rs.next()){
				unitRate = new HashMap<String,String>();
				unitRate.put("Start",(rs.getString("tier_start").length() !=0 )? rs.getString("tier_start"): "");
				unitRate.put("end", (rs.getString("tier_end").length()!=0)? rs.getString("tier_end") : "1001");
				unitRate.put("rate",(rs.getString("per_unit").length() !=0 )? rs.getString("per_unit"): "");	
				rate.add(unitRate);
			}
			
		}catch(Exception e){
			System.out.println("Exception inside getPerUnitChage()####"+e);
		}finally{
			con.close();
			pst.close();
			rs.close();
		}
		
		return rate;
		
	}
	
	public String generateHtml(ReportDto reportDto){
		
		StringBuffer buffer = new StringBuffer();
		buffer.append("<html><head><style>");
		buffer.append("#customers {font-family: Arial, Helvetica, sans-serif;width: 70%; border-collapse: collapse;} ");
		buffer.append(" #customers td, #customers th {font-size: 1em; border: 1px solid #98bf21;padding: 3px 7px 2px 7px;} ");  
		buffer.append(" #customers th {font-size: 1.1em;text-align: left;padding-top: 5px; padding-bottom: 4px;padding-left:20px; ");     
		buffer.append(" background-color: #A7C942;color: #ffffff; } #customers tr.alt td {color: #000000; ");
		buffer.append(" background-color: #EAF2D3; } </style> </head> <body> <table id='customers'><tr> ");
		buffer.append(" <th style='width:10%'>TNEB</th><th style='width:80%'>EB-Bill-July</th> </tr> ");  
		buffer.append(" <tr><th style='background-color:white;color:black;' colspan=2></th> </tr> ");      
		buffer.append(" <tr><th style='background-color:white;color:black;' colspan=2>Customer Id :");
		buffer.append(reportDto.getCustId());
		buffer.append("</th><th style='background-color:white;color:black;'>Meter Start :");
		buffer.append(reportDto.getStartId());
		buffer.append("</th></tr>");
		buffer.append(" <tr><th style='background-color:white;color:black' colspan=2>Name :");
		buffer.append(reportDto.getName());
		buffer.append("</th><th style='background-color:white;color:black;'>Meter End :");
		buffer.append(reportDto.getEndId());
		buffer.append("</th></tr>");
		buffer.append("<tr><th style='background-color:white;color:black' colspan=2>Address : ");
		buffer.append(reportDto.getAddress());
		buffer.append("</th> <th style='background-color:white;color:black;'>Tax :10%</th></tr>");
		buffer.append("<tr><th style='background-color:white;color:black' colspan=2>Bill:");
		buffer.append(reportDto.getBill()); 
		buffer.append("</th></tr></table></html>");
		buffer.append("<html><tabe><tr><td></td></tr></table></html>");
		            
		return buffer.toString();
	}
}
